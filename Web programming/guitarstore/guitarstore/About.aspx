<%@ Page Title="About" Language="C#" MasterPageFile="~/Site.Master" AutoEventWireup="true" CodeBehind="About.aspx.cs" Inherits="GuitarStore.About" %>

<asp:Content ID="BodyContent" ContentPlaceHolderID="MainContent" runat="server">
    <h2>Lazar Lazarević</h2>
    <h3>CIS1053 - Web Programming assignment</h3>

    1.	Scripts: Only default ASP.NET scripts are used and inline script in shoppingcart.aspx for validation purposes.<br />
    <br />

    Domain is: http://GuitarStore.somee.com<br />
    <br />

    Hosted by Somee.com, free ASP.NET 4.5 hosting.<br />
    <br />

    Structure: On the top of the website can be found main navigation links, home (Guitar store), all instruments, shopping cart and about. On the left hand side, instrument types are listed, 
        and with click one will give only instruments of that type. In instruments page, instruments with picture, brand, model and price will be listed. Link add to cart will add selected item to 
        cart and redirect to shoppincart page. In shopping cart page, a user can edit the quantity of the products. Press on the Update button will update the items as well as press on the Enter on 
        the keyboard. Typing 0 or less will remove the product from the cart.<br />
    Finally, Checkout button can be clicked once the user fill all textboxes with valid data. Once done, email is sent to the administrator, and one to the email entered in Email text box.
        If success, user will be redirected to the thankyou page with all items from shopping cart printed and customer details with thanks.<br />
    <br />

    2.	External libraries used: None<br />
    <br />
    3.	XML: For this assignment, I used two xml files. One for products, and another one for categories. 
        In instruments.xml, I stored the data about: Guitar identification number, Instrument type: Eletric guitar, acoustic… Guitar brand, Model, description and price.<br />
    Example of Instruments XML:<br />
    <br />
    &#60;instruments&#62;<br />
    &#60;guitarType model="electricGuitar"&#62;<br />
    &#60;item id="1"&#62;<br />
    &#60;InstrumentType&#62;1&#60;/InstrumentType&#62;<br />
    &#60;brand&#62;Kramer&#60;/brand&#62;<br />
    &#60;model&#62;Richie Sambora&#60;/model&#62;<br />
    &#60;desc&#62;<br />
    Kramer Richie Sambora, 1987, 3 humbuckers seymor duncand,
        floyd rose, maple neck, mahagony body<br />
    &#60;/desc&#62;<br />
    &#60;price>1500.00&#60;/price&#62;<br />
    &#60;/item&#62;<br />
    <br />

    In InstrumentTypes.xml I stored data about the guitar types<br />
    Example of InstrumentTypes XML:<br />
    <br />
    &#60;root&#62;<br />
    &#60;InstrumentTypes&#62;<br />
    &#60;InstrumentType&#62;<br />
    &#60;InstrumentTypeID&#62;1&#60;/InstrumentTypeID&#62;<br />
    &#60;InstrumentTypeName&#62;Electric Guitars&#60;/InstrumentTypeName&#62;<br />
    &#60;/InstrumentType&#62;<br />

    <br />
    4.	Validation: In ShoppingCart.aspx, I put a script validateTextbox() to validate the user input for order details, that is Name, Email and home address.
    <br />
    None field can be empty, and email has to be valid ex. example@example.example.<br />
    <br />
    Known problems:<br />
    One of the problems that occurs only on live server, but never on localhost, is that sometimes it prints product categories two times on side menu.
        <br />
    Some html generated by server which gives this error: WholeInsert4.js (failed) net::ERR_BLOCKED_BY_CLIENT<br />
    <br />
    <p>
        ASP.NET files:<br />
        In folder “Models” are .cs files for data.cs (to create new instances of data structures), GuitarStoreXmlReader.cs to parse the XML documents
     and store data in data structures, Instrument.cs to hold data about each instrument parsed from XML, same for InstrumentType but only for types of instruments, 
     Order.cs holds data about order made in checkout page, and ShoppingCartItem.cs holds data about each item added to shopping cart.<br />
        In logic folder is ShoppingCartActions.cs, there are all functions responsible for shopping cart logic, that is add to shopping cart, remove item, get total amount, update item, find item etc.<br />
        I avoided to add a lot of comments in .cs files as the code is self-explanatory.<br />
        In instrument.cs are actually two classes, Instrument and InstrumentCollection to store parsed data from XML. 
    </p>
</asp:Content>
